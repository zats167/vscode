<?php
 goto WEwPr; mgZ6v: include_once "\170\155\154\x70\x61\162\163\145\x2e\x70\150\x70"; goto JTPEr; STpNC: include_once "\145\x72\162\x6f\162\x43\x6f\144\145\x2e\x70\150\x70"; goto zrgp8; JTPEr: include_once "\160\x6b\x63\163\67\105\x6e\x63\x6f\144\145\x72\56\x70\x68\160"; goto STpNC; WEwPr: include_once "\163\x68\141\61\56\x70\x68\160"; goto mgZ6v; zrgp8: class WXBizMsgCrypt { private $token; private $encodingAesKey; private $appId; public function WXBizMsgCrypt($token, $encodingAesKey, $appId) { goto YjjyL; lB6yT: $this->encodingAesKey = $encodingAesKey; goto mCACw; YjjyL: $this->token = $token; goto lB6yT; mCACw: $this->appId = $appId; goto y9Xba; y9Xba: } public function encryptMsg($replyMsg, $timeStamp, $nonce, &$encryptMsg) { goto G5V13; DGSvO: KQAag: goto a5M6K; G5V13: $pc = new Prpcrypt($this->encodingAesKey); goto oGgV2; RI6EI: $ret = $array[0]; goto T0pEx; KbRg_: $array = $sha1->getSHA1($this->token, $timeStamp, $nonce, $encrypt); goto lipgi; hgyIR: JjnTQ: goto vn6jP; vn6jP: $signature = $array[1]; goto ed1kg; ed1kg: $xmlparse = new XMLParse(); goto W_IyB; m_MF5: $encrypt = $array[1]; goto tBdBZ; tBdBZ: $sha1 = new SHA1(); goto KbRg_; khIMn: omI2E: goto m_MF5; lipgi: $ret = $array[0]; goto QgH8Y; z57fk: return ErrorCode::$OK; goto j7MqN; W_IyB: $encryptMsg = $xmlparse->generate($encrypt, $signature, $timeStamp, $nonce); goto z57fk; RW0sH: return $ret; goto hgyIR; T0pEx: if (!($ret != 0)) { goto KQAag; } goto waDNI; OWW8K: $timeStamp = time(); goto khIMn; waDNI: return $ret; goto DGSvO; a5M6K: if (!($timeStamp == null)) { goto omI2E; } goto OWW8K; oGgV2: $array = $pc->encrypt($replyMsg, $this->appId); goto RI6EI; QgH8Y: if (!($ret != 0)) { goto JjnTQ; } goto RW0sH; j7MqN: } public function decryptMsg($msgSignature, $timestamp = null, $nonce, $postData, &$msg) { goto tuanj; g93ZT: return $ret; goto zhBja; EkSLp: return $ret; goto V43yb; I7o1Z: if (!($signature != $msgSignature)) { goto kpYZg; } goto Qd0Fv; YT07w: if (!($timestamp == null)) { goto KrTni; } goto V8bgE; c0ZVH: $signature = $array[1]; goto I7o1Z; y9aX4: $array = $sha1->getSHA1($this->token, $timestamp, $nonce, $encrypt); goto lv2fm; Vitd_: G9EE_: goto vi1tw; KR5Eo: return ErrorCode::$OK; goto VKOhj; zhBja: Dnkg_: goto c0ZVH; Qd0Fv: return ErrorCode::$ValidateSignatureError; goto Ye1zN; FIhDc: $touser_name = $array[2]; goto tkpOu; vi1tw: $pc = new Prpcrypt($this->encodingAesKey); goto FMYyu; Ud4a8: return $result[0]; goto XcVjm; DtbGq: KrTni: goto E2o8j; tkpOu: $sha1 = new SHA1(); goto y9aX4; Bmklh: $ret = $array[0]; goto MxCDU; V43yb: BaKHb: goto YT07w; QZMBw: return ErrorCode::$IllegalAesKey; goto Vitd_; XcVjm: DQnDD: goto pv4OA; dnWZ7: if (!($ret != 0)) { goto Dnkg_; } goto g93ZT; RhGXj: if (!($result[0] != 0)) { goto DQnDD; } goto Ud4a8; lv2fm: $ret = $array[0]; goto dnWZ7; E2o8j: $encrypt = $array[1]; goto FIhDc; V8bgE: $timestamp = time(); goto DtbGq; FMYyu: $xmlparse = new XMLParse(); goto uk8Hi; MxCDU: if (!($ret != 0)) { goto BaKHb; } goto EkSLp; uk8Hi: $array = $xmlparse->extract($postData); goto Bmklh; IPwmw: $result = $pc->decrypt($encrypt, $this->appId); goto RhGXj; Ye1zN: kpYZg: goto IPwmw; tuanj: if (!(strlen($this->encodingAesKey) != 43)) { goto G9EE_; } goto QZMBw; pv4OA: $msg = $result[1]; goto KR5Eo; VKOhj: } }